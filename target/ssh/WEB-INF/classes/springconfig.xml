<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- =======================注解扫描======================= -->
	<context:component-scan base-package="com.zhejiang.zhixin"></context:component-scan>
	<!-- 支持注解 -->
	<context:annotation-config />
	<!--读取数据库的配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>
	<!--配置hibernate数据源 -->
	<bean id="hibernateDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 配置c3p0数据源的相关属性 -->
		<property name="driverClass" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${username}" />
		<property name="password" value="${password}" />
		<!-- c3p0 数据库连接池属性配置 -->
		<!-- 数据库连接池所维持的最大数据库连接数目 -->
		<property name="maxPoolSize" value="50"></property>
		<!-- 数据库连接池初始化的最小数据库连接数目 -->
		<property name="initialPoolSize" value="2"></property>
		<!-- 数据库连接池所维持的连接的有效时长：秒 -->
		<property name="maxIdleTime" value="5000"></property>
	</bean>

	<!-- 2、配置hibernate的sessionfactory bean -->
	<bean id="sessinFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 2.1 配置sessionfactory的数据源 -->
		<property name="dataSource" ref="hibernateDataSource"></property>
		<!-- 2.2 hibernate框架特性的配置 -->
		<property name="hibernateProperties">
			<!-- 应为该属性类型为properties，所以使用props节点进行配置 -->
			<props>
				<!-- 配置hibernate的数据库方言：指明所加载的数据库类型 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<!-- 是否在控制台数输出每次进行数据库操作的hibernate映射之后的sql语句 -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- hibernate进行外连接处理时，所取的外链及的最大层数 -->
				<prop key="hibernate.max_fetch_depth">3</prop>
				<!-- hibernate对数据表进行生成的处理策略： create-drop：hibernate每次加载表结构时，开始加载时创建表结构；结束时删除表结构；先建立表，再删除表 
					create：hibernate每次加载表结构时，加载时都重新创建表结构；删除原有数据，重新建立表 update：hibernate每次加载表结构时，检查表结构没有更新，如果有更新处理；不会删除原有数据 
					validate：hibernate每次加载表结构时，加载时验证表结构； -->
	<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.zhejiang.zhixin.*</value>
			</list>
		</property>
	</bean>

	<!-- 3、配置hibernate的事务管理对象 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- 依赖注入sessionfactory bean实例对象 -->
		<property name="sessionFactory" ref="sessinFactory"></property>
	</bean>

	<!-- 4、配置spring的事务管理aop -->
	<!-- aop通知属性的配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 事务的传播属性:即事务aop触发点,可以使用*号通配符 -->
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="logic*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="is*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="do*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 5、aop切面的配置 -->
	<aop:config>
		<aop:pointcut id="aopPointcut"
			expression="execution(* com.zhejiang.zhixin.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="aopPointcut" />
	</aop:config>
</beans>